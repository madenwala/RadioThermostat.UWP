<views:ThermostatViewBase
    x:Class="RadioThermostat.UI.Views.ThermostatView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:views="using:RadioThermostat.UI.Views"
    xmlns:controls="using:AppFramework.UI.Controls"
    xmlns:designTime="using:RadioThermostat.Core.ViewModels.Designer"
    d:DataContext="{d:DesignInstance designTime:ThermostatViewModel, IsDesignTimeCreatable=True}"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Name="ControlButtonStyle" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
    </Page.Resources>

    <controls:BodyPanel>
        <controls:BodyPanel.AppBar>
            <CommandBar x:Name="cmdBar">
                <CommandBar.PrimaryCommands>
                    <AppBarButton x:Uid="/RadioThermostat.Core/Resources/abtnProgram" x:Name="btnProgram" Label="[Program]" Icon="CalendarWeek" Command="{x:Bind ViewModel.Platform.Navigation.NavigateToThermostatProgramCommand, Mode=OneWay}" CommandParameter="{x:Bind ViewModel.IPAddress, Mode=OneWay}" />
                    <AppBarButton x:Uid="/RadioThermostat.Core/Resources/abtnThermostatConfigure" Label="[Configure Thermostat]" Icon="Repair" Command="{x:Bind ViewModel.Platform.Navigation.NavigateToThermostatConfigureCommand}" CommandParameter="{x:Bind ViewModel.IPAddress, Mode=OneWay}" />
                    <AppBarButton x:Uid="/RadioThermostat.Core/Resources/abtnRefresh" Label="[Refresh]" Icon="Refresh" Command="{x:Bind ViewModel.RefreshCommand, Mode=OneWay}" />
                </CommandBar.PrimaryCommands>
                <CommandBar.SecondaryCommands>
                    <AppBarButton x:Uid="/RadioThermostat.Core/Resources/abtnDeleteThermostat" Label="[Delete Thermostat]" Icon="Delete" Command="{x:Bind ViewModel.DeleteCommand, Mode=OneWay}" />
                </CommandBar.SecondaryCommands>
            </CommandBar>
        </controls:BodyPanel.AppBar>
        <controls:BodyPanel.BodyContent>
            <Grid>
                <Grid Visibility="{x:Bind ViewModel.Status, Mode=OneWay, Converter={StaticResource visConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" x:Name="controlsRow" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Viewbox Grid.ColumnSpan="3" HorizontalAlignment="Stretch">
                        <RelativePanel HorizontalAlignment="Center">
                            <StackPanel x:Name="spCurrentTemp" Margin="24">
                                <TextBlock Text="INDOOR TEMPERATURE" HorizontalAlignment="Center" Style="{StaticResource SubtleCaptionTextBlockStyle}" />
                                <TextBlock Text="{x:Bind ViewModel.Status.CurrentTemperature, Mode=OneWay, Converter={StaticResource stringFormatConverter}, ConverterParameter='\{0\}º'}" FontSize="96" Style="{StaticResource HeaderTextBlockStyle}" />
                            </StackPanel>
                            <StackPanel x:Name="spSetTemp" RelativePanel.RightOf="spCurrentTemp" Margin="48,24,24,24" Visibility="{x:Bind ViewModel.Status.IsModeOff, Mode=OneWay, Converter={StaticResource visInvertedConverter}}">
                                <TextBlock Text="TARGET" Style="{StaticResource SubtleCaptionTextBlockStyle}" HorizontalAlignment="Center" TextAlignment="Center" />
                                <Button x:Name="btnTempUp" Margin="0,8,0,0" Width="40" Height="40" Content="+" HorizontalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource PrimaryButtonStyle}" Command="{x:Bind ViewModel.RaiseTemperatureCommand, Mode=OneWay}" />
                                <TextBlock TextAlignment="Center" MinWidth="100" Text="{x:Bind ViewModel.Status.TargetTemperature, Mode=OneWay, Converter={StaticResource stringFormatConverter}, ConverterParameter='\{0\}º'}" Style="{StaticResource HeaderTextBlockStyle}" HorizontalAlignment="Center" />
                                <Button x:Name="btnTempDown" Margin="0,8,0,0" Width="40" Height="40" Content="-" HorizontalContentAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource PrimaryButtonStyle}" Command="{x:Bind ViewModel.LowerTemperatureCommand, Mode=OneWay}" />
                            </StackPanel>
                        </RelativePanel>
                    </Viewbox>

                    <StackPanel Grid.ColumnSpan="3" Grid.Row="1" Margin="12">
                        <TextBlock Style="{StaticResource BodyTextBlockStyle}" Text="{x:Bind ViewModel.ProgramStatusTask.Result, Mode=OneWay}" />
                        <TextBlock Style="{StaticResource SubtleTextBlockStyle}" Text="{x:Bind ViewModel.Status.Time, Mode=OneWay, Converter={StaticResource stringFormatConverter}, ConverterParameter='Last thermostat contact: \{0\}'}" />
                    </StackPanel>

                    <Button 
                        XYFocusUp="{x:Bind btnTempDown}"
                        Grid.Row="2" Grid.Column="0" Style="{StaticResource ControlButtonStyle}"
                        Foreground="{Binding ViewModel.Status.Mode, Mode=OneWay, Converter={StaticResource fgConverter}}"
                        Background="{Binding ViewModel.Status.Mode, Mode=OneWay, Converter={StaticResource bgConverter}}" >
                        <Button.Flyout>
                            <MenuFlyout>
                                <ToggleMenuFlyoutItem Text="OFF" IsEnabled="{Binding ViewModel.Status.IsModeOff, Mode=OneWay, Converter={StaticResource boolInvertedConverter}}" IsChecked="{Binding ViewModel.Status.IsModeOff, Mode=TwoWay}" />
                                <ToggleMenuFlyoutItem Text="HEAT" IsEnabled="{Binding ViewModel.Status.IsModeHeat, Mode=OneWay, Converter={StaticResource boolInvertedConverter}}" IsChecked="{Binding ViewModel.Status.IsModeHeat, Mode=TwoWay}" />
                                <ToggleMenuFlyoutItem Text="COOL" IsEnabled="{Binding ViewModel.Status.IsModeCool, Mode=OneWay, Converter={StaticResource boolInvertedConverter}}" IsChecked="{Binding ViewModel.Status.IsModeCool, Mode=TwoWay}" />
                                <ToggleMenuFlyoutItem Text="AUTO" IsEnabled="{Binding ViewModel.Status.IsModeAuto, Mode=OneWay, Converter={StaticResource boolInvertedConverter}}" IsChecked="{Binding ViewModel.Status.IsModeAuto, Mode=TwoWay}" />
                            </MenuFlyout>
                        </Button.Flyout>
                        <StackPanel HorizontalAlignment="Center">
                            <TextBlock Text="Mode" />
                            <TextBlock Text="{Binding ViewModel.Status.Mode, Mode=OneWay, Converter={StaticResource upperCasingConverter}}" Style="{StaticResource SubheaderTextBlockStyle}" />
                        </StackPanel>
                    </Button>

                    <Button 
                        XYFocusUp="{x:Bind btnTempDown}"
                        Grid.Row="2" Grid.Column="1" Style="{StaticResource ControlButtonStyle}" 
                        Foreground="{Binding ViewModel.Status.FanOperatingMode, Mode=OneWay, Converter={StaticResource fgConverter}}"
                        Background="{Binding ViewModel.Status.FanOperatingMode, Mode=OneWay, Converter={StaticResource bgConverter}}" >
                        <Button.Flyout>
                            <MenuFlyout>
                                <ToggleMenuFlyoutItem Text="AUTO" IsEnabled="{Binding ViewModel.Status.IsFanAuto, Mode=OneWay, Converter={StaticResource boolInvertedConverter}}" IsChecked="{Binding ViewModel.Status.IsFanAuto, Mode=TwoWay}" />
                                <ToggleMenuFlyoutItem Text="AUTO CIRCULATE" IsEnabled="{Binding ViewModel.Status.IsFanAutoCirculate, Mode=OneWay, Converter={StaticResource boolInvertedConverter}}" IsChecked="{Binding ViewModel.Status.IsFanAutoCirculate, Mode=TwoWay}" />
                                <ToggleMenuFlyoutItem Text="ON" IsEnabled="{Binding ViewModel.Status.IsFanOn, Mode=OneWay, Converter={StaticResource boolInvertedConverter}}" IsChecked="{Binding ViewModel.Status.IsFanOn, Mode=TwoWay}" />
                            </MenuFlyout>
                        </Button.Flyout>
                        <StackPanel HorizontalAlignment="Center">
                            <TextBlock Text="Fan" />
                            <TextBlock Text="{Binding ViewModel.Status.FanOperatingMode, Mode=OneWay, Converter={StaticResource upperCasingConverter}}" Style="{StaticResource SubheaderTextBlockStyle}" />
                        </StackPanel>
                    </Button>

                    <Button
                        XYFocusUp="{x:Bind btnTempDown}"
                        Grid.Row="2" Grid.Column="2" Style="{StaticResource ControlButtonStyle}"
                        Foreground="{Binding ViewModel.Status.Hold, Mode=OneWay, Converter={StaticResource fgConverter}}"
                        Background="{Binding ViewModel.Status.Hold, Mode=OneWay, Converter={StaticResource bgConverter}}" >
                        <Button.Flyout>
                            <MenuFlyout>
                                <ToggleMenuFlyoutItem Text="On" IsEnabled="{x:Bind ViewModel.Status.Hold, Mode=OneWay, Converter={StaticResource boolInvertedConverter}}" IsChecked="{x:Bind ViewModel.Status.Hold, Mode=TwoWay}" />
                                <ToggleMenuFlyoutItem Text="Off" IsEnabled="{x:Bind ViewModel.Status.Hold, Mode=OneWay}" IsChecked="{x:Bind ViewModel.Status.Hold, Mode=TwoWay, Converter={StaticResource boolInvertedConverter}}" />
                            </MenuFlyout>
                        </Button.Flyout>
                        <StackPanel HorizontalAlignment="Center">
                            <TextBlock Text="Hold" />
                            <TextBlock Text="ON" Visibility="{x:Bind ViewModel.Status.Hold, Mode=OneWay, Converter={StaticResource visConverter}}" Style="{StaticResource SubheaderTextBlockStyle}" />
                            <TextBlock Text="OFF" Visibility="{x:Bind ViewModel.Status.Hold, Mode=OneWay, Converter={StaticResource visInvertedConverter}}" Style="{StaticResource SubheaderTextBlockStyle}" />
                        </StackPanel>
                    </Button>

                </Grid>
                <Grid Visibility="{x:Bind ViewModel.ShowDeleteButton, Mode=OneWay, Converter={StaticResource visConverter}}">
                    <Button Margin="12" VerticalAlignment="Top" Content="Delete Thermostat" Command="{x:Bind ViewModel.DeleteCommand, Mode=OneWay}" XYFocusRight="{x:Bind btnProgram}" />
                </Grid>
            </Grid>
        </controls:BodyPanel.BodyContent>
    </controls:BodyPanel>

</views:ThermostatViewBase>