<views:ShellViewBase
    x:Class="RadioThermostat.UI.Views.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:views="using:RadioThermostat.UI.Views"
    xmlns:controls="using:AppFramework.UI.Controls"
    xmlns:viewmodels="using:RadioThermostat.Core.ViewModels"
    xmlns:triggers="using:AppFramework.UI.Triggers"
    xmlns:designTime="using:RadioThermostat.Core.ViewModels.Designer"
    d:DataContext="{d:DesignInstance designTime:ShellViewModel, IsDesignTimeCreatable=True}"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" DataContext="{Binding DataContext, ElementName=bodyFrame, Mode=OneWay}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPoint8Landscape}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="svMain.Background" Value="{ThemeResource SystemControlPageBackgroundChromeLowBrush}" />
                        <Setter Target="togMenu.IsChecked" Value="True" />
                        <Setter Target="svMain.DisplayMode" Value="CompactInline" />
                        <Setter Target="svMain.IsPaneOpen" Value="True" />
                        <Setter Target="bodyFrame.IsMenuHidden" Value="False" />
                        <Setter Target="togMenu.Visibility" Value="Collapsed" />
                        <Setter Target="togMenuRowDefinition.Height" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SnapPointMinimum}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="togMenu.IsChecked" Value="False" />
                        <Setter Target="svMain.DisplayMode" Value="Overlay" />
                        <Setter Target="svMain.IsPaneOpen" Value="False" />
                        <Setter Target="bodyFrame.IsMenuHidden" Value="True" />
                        <Setter Target="togMenu.Visibility" Value="Visible" />
                        <Setter Target="togMenuRowDefinition.Height" Value="{StaticResource StandardElementGridLength}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:SplitViewChangeHeaderBackgroundTrigger
                            DisplayMode="{x:Bind svMain.DisplayMode, Mode=OneWay}"
                            IsMenuOpen="{x:Bind ViewModel.IsMenuOpen, Mode=OneWay}"  />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="togMenu.Background" Value="{ThemeResource SystemControlBackgroundChromeMediumBrush}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <SplitView 
            x:Name="svMain" 
            IsTabStop="False"
            DisplayMode="Inline"
            Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}"
            PaneBackground="Transparent"
            IsPaneOpen="{x:Bind ViewModel.IsMenuOpen, Mode=TwoWay}">

            <controls:ApplicationFrame x:Name="bodyFrame" />

            <SplitView.Pane>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="togMenuRowDefinition" Height="{StaticResource StandardElementGridLength}" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Rectangle Grid.Row="1" Grid.RowSpan="4" Fill="{ThemeResource SystemControlPageBackgroundChromeLowBrush}" />

                    <ListView 
                        Grid.Row="1"
                        ItemsSource="{x:Bind ViewModel.Thermostats, Mode=OneWay}" 
                        ScrollViewer.VerticalScrollMode="Auto" 
                        ItemContainerStyle="{StaticResource ThermostatListItemContainerStyle}"
                        SelectionMode="None"
                        ItemClick="ListView_ItemClick"
                        IsItemClickEnabled="True">

                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="viewmodels:ThermostatViewModel">
                                <Grid RightTapped="Grid_RightTapped" BorderBrush="{ThemeResource SystemControlBackgroundChromeMediumBrush}" BorderThickness="0,0,0,2">

                                    <FlyoutBase.AttachedFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem Text="Delete" Command="{Binding DeleteCommand}" />
                                        </MenuFlyout>
                                    </FlyoutBase.AttachedFlyout>

                                    <Grid Padding="12" Opacity="{x:Bind ViewModel.HasFailedConnection, Mode=OneWay, Converter={StaticResource opacityConverter}}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
                                            <TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" Style="{StaticResource TitleTextBlockStyle}" />
                                        </Border>
                                        <StackPanel Grid.Row="1">
                                            <TextBlock Text="INDOOR TEMPERATURE" Style="{StaticResource SubtleCaptionTextBlockStyle}"/>
                                            <TextBlock Text="{x:Bind CurrentStatus.CurrentTemperature, Mode=OneWay, Converter={StaticResource stringFormatConverter}, ConverterParameter='\{0\}º'}" Style="{StaticResource HeaderTextBlockStyle}" Margin="0,-8,0,0" />
                                        </StackPanel>
                                        <StackPanel Grid.Row="1" Grid.Column="1" Padding="12,0" Visibility="{x:Bind CurrentStatus, Mode=OneWay, Converter={StaticResource visConverter}}">
                                            <TextBlock Text="OFF" Style="{StaticResource BaseTextBlockStyle}" Visibility="{x:Bind CurrentStatus.IsModeOff, Mode=OneWay, Converter={StaticResource visConverter}}" HorizontalAlignment="Right" TextAlignment="Right" />
                                            <TextBlock Text="TARGET" Style="{StaticResource SubtleCaptionTextBlockStyle}" Visibility="{x:Bind CurrentStatus.IsModeOff, Mode=OneWay, Converter={StaticResource visInvertedConverter}}" HorizontalAlignment="Right" TextAlignment="Right" />
                                            <TextBlock Text="AUTO" Style="{StaticResource BaseTextBlockStyle}" Visibility="{x:Bind CurrentStatus.IsModeAuto, Mode=OneWay, Converter={StaticResource visConverter}}" HorizontalAlignment="Right" TextAlignment="Right" />
                                            <TextBlock Text="{x:Bind CurrentStatus.TargetTemperatureHeat, Mode=OneWay, Converter={StaticResource stringFormatConverter}, ConverterParameter='\{0\}º'}" Visibility="{x:Bind CurrentStatus.IsModeHeat, Mode=OneWay, Converter={StaticResource visConverter}}" Style="{StaticResource TitleTextBlockStyle}" HorizontalAlignment="Right" TextAlignment="Right" />
                                            <TextBlock Text="HEAT" Foreground="{ThemeResource HeatColorBrush}" Visibility="{x:Bind CurrentStatus.IsModeHeat, Mode=OneWay, Converter={StaticResource visConverter}}" HorizontalAlignment="Right" TextAlignment="Right" />
                                            <TextBlock Text="{x:Bind CurrentStatus.TargetTemperatureCool, Mode=OneWay, Converter={StaticResource stringFormatConverter}, ConverterParameter='\{0\}º'}" Visibility="{x:Bind CurrentStatus.IsModeCool, Mode=OneWay, Converter={StaticResource visConverter}}" Style="{StaticResource TitleTextBlockStyle}" HorizontalAlignment="Right" TextAlignment="Right" />
                                            <TextBlock Text="COOL" Foreground="{ThemeResource CoolColorBrush}" Visibility="{x:Bind CurrentStatus.IsModeCool, Mode=OneWay, Converter={StaticResource visConverter}}" HorizontalAlignment="Right" TextAlignment="Right" />
                                        </StackPanel>
                                    </Grid>

                                    <Grid Visibility="{x:Bind ViewModel.HasFailedConnection, Mode=OneWay, Converter={StaticResource visConverter}}">
                                        <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Opacity=".75" />
                                        <TextBlock 
                                            Style="{StaticResource SubtleCaptionTextBlockStyle}"
                                            TextWrapping="Wrap"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Text="Could not connect to this thermostat." />
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                    <StackPanel 
                        Grid.Row="2" 
                        BorderBrush="{ThemeResource SystemControlBackgroundChromeMediumBrush}" 
                        BorderThickness="0,2,0,0">

                        <controls:SplitViewButton GroupName="ShellNav" x:Uid="/RadioThermostat.Core/Resources/svbAddThermostat" x:Name="btnAddThermostat" Content="[Add Thermostat]" Symbol="Add" Command="{x:Bind ViewModel.Platform.Navigation.NavigateToAddThermostatCommand}" />

                    </StackPanel>

                    <StackPanel 
                        Grid.Row="3" 
                        Orientation="Horizontal" 
                        Padding="48,0,0,0" 
                        Visibility="{x:Bind ViewModel.IsMenuOpen, Mode=OneWay, Converter={StaticResource visConverter}}" 
                        BorderBrush="{ThemeResource SystemControlBackgroundChromeMediumBrush}" BorderThickness="0,2,0,0">
                        <Button
                            x:Uid="/RadioThermostat.Core/Resources/pbtnFeedback"
                            Command="{x:Bind ViewModel.Platform.Navigation.FeedbackCommand}"
                            Style="{StaticResource SplitViewPaneButtonStyle}" 
                            Visibility="{x:Bind ViewModel.Platform.Navigation.IsFeedbackEnabled, Converter={StaticResource visConverter}}"
                            Content="&#xE939;" />
                        <Button
                            x:Uid="/RadioThermostat.Core/Resources/pbtnRateApp"
                            Command="{x:Bind ViewModel.Platform.Ratings.NavigateToRateAppCommand}"
                            Style="{StaticResource SplitViewPaneButtonStyle}" >
                            <SymbolIcon>Like</SymbolIcon>
                        </Button>
                    </StackPanel>

                    <StackPanel 
                        Grid.Row="4" 
                        BorderBrush="{ThemeResource SystemControlBackgroundChromeMediumBrush}" 
                        BorderThickness="0,2,0,0">

                        <controls:SplitViewButton 
                                x:Uid="/RadioThermostat.Core/Resources/svbSettings" GroupName="ShellNav" x:Name="btnSettings" Content="[Settings]" 
                                Symbol="Setting" 
                                Command="{x:Bind ViewModel.Platform.Navigation.SettingsCommand}" />
                    </StackPanel>
                </Grid>
            </SplitView.Pane>

        </SplitView>

        <ToggleButton 
            x:Name="togMenu"
            Width="{StaticResource StandardElementPixels}" 
            Height="{StaticResource StandardElementPixels}"
            VerticalAlignment="Top"
            IsTabStop="True"
            DataContext="{Binding DataContext, ElementName=bodyFrame, Mode=OneWay}"
            IsChecked="{x:Bind ViewModel.IsMenuOpen, Mode=TwoWay, Converter={StaticResource boolConverter}}"
            Background="Transparent"
            Style="{StaticResource TranparentToggleButtonStyle}">
            <FontIcon FontSize="20" Glyph="&#xE700;" />
        </ToggleButton>

    </Grid>

</views:ShellViewBase>