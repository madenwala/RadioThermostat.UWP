<views:ThermostatProgramViewBase
    x:Class="RadioThermostat.UI.Views.ThermostatProgramView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:views="using:RadioThermostat.UI.Views"
    xmlns:models="using:RadioThermostat.Core.Models"
    xmlns:amodels="using:RadioThermostat.Api.Models"
    xmlns:controls="using:AppFramework.UI.Controls"
    xmlns:designTime="using:RadioThermostat.Core.ViewModels.Designer"
    d:DataContext="{d:DesignInstance designTime:ThermostatProgramViewModel, IsDesignTimeCreatable=True}"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Style TargetType="TimePicker">
            <Setter Property="Margin" Value="0,0,4,0" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="0,0,4,0" />
        </Style>
        <DataTemplate x:Name="HeaderDataTemplate">
            <TextBlock Style="{StaticResource SubtleTextBlockStyle}" Text="{Binding}" Margin="0,12,0,0" />
        </DataTemplate>
        <DataTemplate x:Name="ProgramDayDataTemplate" x:DataType="amodels:ProgramDayModel">
            <StackPanel Margin="0,0,24,36">
                <TextBlock Text="{x:Bind Day, Mode=OneWay}" Style="{StaticResource TitleTextBlockStyle}"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TimePicker Grid.Row="0" Grid.Column="0" Header="Time 1:" Time="{x:Bind Time1, Mode=TwoWay}" HeaderTemplate="{StaticResource HeaderDataTemplate}" />
                    <TextBox Grid.Row="0" Grid.Column="1" Header="Temp:" InputScope="Number" Text="{x:Bind Temp1, Mode=TwoWay, Converter={StaticResource doubleConverter}}" HeaderTemplate="{StaticResource HeaderDataTemplate}" />
                    <TimePicker Grid.Row="1" Grid.Column="0" Header="Time 2:" Time="{x:Bind Time2, Mode=TwoWay}" HeaderTemplate="{StaticResource HeaderDataTemplate}" />
                    <TextBox Grid.Row="1" Grid.Column="1" Header="Temp:" InputScope="Number" Text="{x:Bind Temp2, Mode=TwoWay, Converter={StaticResource doubleConverter}}" HeaderTemplate="{StaticResource HeaderDataTemplate}" />
                    <TimePicker Grid.Row="2" Grid.Column="0" Header="Time 3:" Time="{x:Bind Time3, Mode=TwoWay}" HeaderTemplate="{StaticResource HeaderDataTemplate}" />
                    <TextBox Grid.Row="2" Grid.Column="1" Header="Temp:" InputScope="Number" Text="{x:Bind Temp3, Mode=TwoWay, Converter={StaticResource doubleConverter}}" HeaderTemplate="{StaticResource HeaderDataTemplate}" />
                    <TimePicker Grid.Row="3" Grid.Column="0" Header="Time 4:" Time="{x:Bind Time4, Mode=TwoWay}" HeaderTemplate="{StaticResource HeaderDataTemplate}" />
                    <TextBox Grid.Row="3" Grid.Column="1" Header="Temp:" InputScope="Number" Text="{x:Bind Temp4, Mode=TwoWay, Converter={StaticResource doubleConverter}}" HeaderTemplate="{StaticResource HeaderDataTemplate}" />
                    <Button Grid.Row="4" Content="Copy to...">
                        <Button.Flyout>
                            <Flyout x:Name="flyout">
                                <StackPanel DataContext="{Binding Mode=OneWay}">
                                    <TextBlock Style="{StaticResource FlyoutPickerTitleTextBlockStyle}">
                                            <Run Text="Copy" />
                                            <Run Text="{Binding Day, Mode=OneWay}" />
                                            <Run Text="to the following days:" />
                                    </TextBlock>
                                    <ListBox SelectionMode="Multiple">
                                        <ListBoxItem Content="Monday" IsEnabled="{x:Bind Day, Mode=OneWay, Converter={StaticResource valueMatchBoolInvertedConverter}, ConverterParameter='Monday'}" />
                                        <ListBoxItem Content="Tuesday" IsEnabled="{x:Bind Day, Mode=OneWay, Converter={StaticResource valueMatchBoolInvertedConverter}, ConverterParameter='Tuesday'}" />
                                        <ListBoxItem Content="Wednesday" IsEnabled="{x:Bind Day, Mode=OneWay, Converter={StaticResource valueMatchBoolInvertedConverter}, ConverterParameter='Wednesday'}" />
                                        <ListBoxItem Content="Thursday" IsEnabled="{x:Bind Day, Mode=OneWay, Converter={StaticResource valueMatchBoolInvertedConverter}, ConverterParameter='Thursday'}" />
                                        <ListBoxItem Content="Friday" IsEnabled="{x:Bind Day, Mode=OneWay, Converter={StaticResource valueMatchBoolInvertedConverter}, ConverterParameter='Friday'}" />
                                        <ListBoxItem Content="Saturday" IsEnabled="{x:Bind Day, Mode=OneWay, Converter={StaticResource valueMatchBoolInvertedConverter}, ConverterParameter='Saturday'}" />
                                        <ListBoxItem Content="Sunday" IsEnabled="{Binding Day, Mode=OneWay, Converter={StaticResource valueMatchBoolInvertedConverter}, ConverterParameter='Sunday'}" />
                                    </ListBox>
                                    <Button Content="Copy" Click="btnCopy_Click" Tag="{Binding ElementName=flyout}" />
                                </StackPanel>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </Grid>
            </StackPanel>
        </DataTemplate>
        <Style TargetType="ListView">
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
            <Setter Property="IsItemClickEnabled" Value="False" />
            <Setter Property="SelectionMode" Value="None" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource SimpleListViewItem}" />
        </Style>
    </Page.Resources>

    <controls:BodyPanel>
        <controls:BodyPanel.BodyContent>
            <controls:Pivot x:Name="pivot">
                <PivotItem Header="Heat" DataContext="{Binding ViewModel.ProgramHeatTask.Result, Mode=OneWay}">
                    <ScrollViewer>
                        <StackPanel>
                            <TextBlock Text="Heat Program" Style="{StaticResource HeaderTextBlockStyle}" Foreground="{StaticResource HeatColorBrush}" />
                            <ListView ItemsSource="{Binding List, Mode=OneWay}" ItemTemplate="{StaticResource ProgramDayDataTemplate}" Foreground="{StaticResource HeatColorBrush}" />
                        </StackPanel>
                    </ScrollViewer>
                </PivotItem>
                <PivotItem Header="Cool" DataContext="{Binding ViewModel.ProgramCoolTask.Result, Mode=OneWay}">
                    <ScrollViewer>
                        <StackPanel>
                            <TextBlock Text="Cool Program" Style="{StaticResource HeaderTextBlockStyle}" Foreground="{StaticResource CoolColorBrush}" />
                            <ListView ItemsSource="{Binding List, Mode=OneWay}" x:Name="lstCool" ItemTemplate="{StaticResource ProgramDayDataTemplate}" Foreground="{StaticResource CoolColorBrush}" />
                        </StackPanel>
                    </ScrollViewer>
                </PivotItem>
            </controls:Pivot>
        </controls:BodyPanel.BodyContent>
        <controls:BodyPanel.AppBar>
            <CommandBar>
                <CommandBar.PrimaryCommands>
                    <AppBarButton x:Uid="/RadioThermostat.Core/Resources/abtnSave" Label="[Save]" Icon="Save" Command="{Binding ViewModel.SaveCommand, Mode=OneWay}" />
                    <AppBarButton x:Uid="/RadioThermostat.Core/Resources/abtnRefresh" Label="[Refresh]" Icon="Refresh" Command="{Binding ViewModel.RefreshCommand, Mode=OneWay}" />
                </CommandBar.PrimaryCommands>
            </CommandBar>
        </controls:BodyPanel.AppBar>
    </controls:BodyPanel>

</views:ThermostatProgramViewBase>